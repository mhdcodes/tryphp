---
import { Code } from "astro:components";

import CopyCodeButton from "../components/CopyCodeButton.astro";
import ThemeToggle from "../components/ThemeToggle.astro";
import Layout from "../layouts/Layout.astro";

const code = "curl -fsSL https://tryphp.dev/install.sh | bash";
---

<Layout>
  <main class="max-w-4xl mx-auto px-4 py-16 flex flex-col gap-12">
    <nav class="flex justify-between items-center">
      <p class="text-xl font-bold flex items-center gap-2">
        <svg
          class="fill-current"
          xmlns="http://www.w3.org/2000/svg"
          width="32"
          height="32"
          viewBox="0 0 20 20"
          ><path
            fill-rule="evenodd"
            d="M10 12v8A10 10 0 0 1 8.17.17L10 2h5a5 5 0 0 1 5 4.99v9.02A4 4 0 0 1 16 20v-2a2 2 0 1 0 0-4h-4l-2-2zm5.5-3a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z"
          ></path></svg
        >
        TryPHP
      </p>
      <div class="flex items-center space-x-4">
        <ThemeToggle />
        <a
          href="https://github.com/the-dijkstra/tryphp"
          class="hover:opacity-80 transition-opacity"
        >
          <svg
            width="30"
            height="30"
            xmlns="http://www.w3.org/2000/svg"
            role="img"
            viewBox="0 0 24 24"
            class="fill-current"
            ><path
              d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"
            ></path></svg
          >
        </a>
      </div>
    </nav>

    <header class="-mb-6">
      <h1 class="text-2xl font-bold mb-2">
        Effortlessly set up <a
          href="https://www.php.net"
          class="hover:underline">PHP</a
        > on Linux with one simple command ðŸš€.
      </h1>
      <p class="text-base">
        Simply run the following command in your terminal to install the latest
        version of PHP and all its dependencies including composer.
      </p>
    </header>

    <section class="relative">
      <Code
        class="rounded p-4 mb-2"
        code={code}
        lang="bash"
        theme="catppuccin-mocha"
      />
      <CopyCodeButton code={code} />

      <p class="text-sm flex items-center">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="16"
          height="16"
          viewBox="0 0 24 24"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="mr-2 stroke-current fill-none"
        >
          <polyline points="4 17 10 11 4 5"></polyline>
          <line x1="12" x2="20" y1="19" y2="19"></line>
        </svg>
        After running the command above, you should restart your terminal session.
      </p>
    </section>

    <section>
      <h2 class="text-2xl font-semibold mb-4">What is TryPHP?</h2>
      <p class="text-lg">
        This tool simplifies the often time-consuming task of setting up a PHP
        environment on Linux. With just a single curl command, you can instantly
        install the latest PHP version, complete with all required dependencies
        and Composer. It's perfect for developers and system administrators
        seeking a fast, efficient setup.
      </p>
    </section>

    <section>
      <h2 class="text-2xl font-semibold mb-4">Features</h2>
      <ul class="list-disc pl-6 space-y-2">
        <li>
          Automated PHP Installation: Set up latest version of PHP with just a
          single curl command.
        </li>
        <li>
          Composer Ready: Installs Composer automatically for seamless package
          management.
        </li>
        <li>
          Dependency Check: Automatically verifies and installs all necessary
          libraries and extensions.
        </li>
      </ul>
    </section>
  </main>
</Layout>
